apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0.2"
        project.archivesBaseName = "opentok-ib-android"
        project.version = "1.0.2"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    allprojects {
        repositories {
            jcenter()
            maven {
                url "http://tokbox.bintray.com/maven"
            }
        }
    }

    libraryVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.aar')) {
                def fileName = "${archivesBaseName}-${version}.aar"
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }

        def specFileDir = "../"

        def copyFile = task("copyFile${variant.name.capitalize()}", type: Copy) {
            //Copy README.md
            from '../README.md'
            into 'build/outputs/'
        }

        def javadoc = task("generateJavaDoc${variant.name.capitalize()}", type: Javadoc, dependsOn: "generate${variant.name.capitalize()}Sources") {
            source = 'src/main/java'
            classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
            destinationDir = file("build/outputs/docs/")
            title = 'OpenTok Interactive Broadcast Solution for Android'
            exclude "com/opentok/android/**"
            exclude "com/tokbox/android/IB/chat/**"
            exclude "com/tokbox/android/IB/common/**"
            exclude "com/tokbox/android/IB/events/**"
            exclude "com/tokbox/android/IB/logging/**"
            exclude "com/tokbox/android/IB/model/**"
            exclude "com/tokbox/android/IB/network/**"
            exclude "com/tokbox/android/IB/services/**"
            exclude "com/tokbox/android/IB/socket/**"
            exclude "com/tokbox/android/IB/ui/**"
            exclude "com/tokbox/android/IB/video/**"
            exclude "com/tokbox/android/IB/CelebrityHostActivity.java"
            exclude "com/tokbox/android/IB/FanActivity.java"
        }

        def zipBundle = task("zipBundle${variant.name.capitalize()}", type: Zip) {
            from('build/outputs')
            include '**/aar/**'
            include '**/docs/**'
            include '**/README.md'
            exclude '**/lint-results-debug_files/**'
            destinationDir = file(".")
            archiveName = "${archivesBaseName}-${version}.zip"
        }

        zipBundle.dependsOn build
        zipBundle.dependsOn javadoc
        zipBundle.dependsOn copyFile
        }
}

dependencies {
    provided fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.2.1'
    compile 'com.opentok.android:opentok-android-sdk:2.9.+'
    compile 'com.opentok.android:opentok-solutions-logging:+'
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.android.volley:volley:1.0.0'
    compile('com.github.nkzawa:socket.io-client:0.4.1') {
        exclude group: 'org.json', module: 'json'
    }
}